{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./src/app/services/webservice.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;ACR5D,MAAM,YAAY;IALzB;QAME,mBAAc,GAAM,EAAE,CAAC;QAEvB,UAAK,GAAG,aAAa,CAAC;QAStB,mBAAc,GAAK,EAAE,CAAC;QAQtB,gBAAW,GAAK,EAAE;KAyBnB;IAxCC,WAAW;QACT,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,YAAY,CAAC,YAAiB;QAC5B,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC;IACrC,CAAC;IAED,eAAe,CAAC,MAAU;QAExB,IAAI,CAAC,cAAc,GAAC,MAAM;QAE1B,KAAK,CAAC,kBAAkB,CAAC,CAAC;IAE5B,CAAC;IAED,WAAW,CAAC,MAAU;QAEpB,IAAI,CAAC,WAAW,GAAC,MAAM,CAAC;IAC1B,CAAC;IACD,SAAS;QAEP,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,EACxD,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAE,SAAS,CAAE,EACnC,GAAG,GAAG,kBAAkB,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC;QAE/C,IAAI,GAAG,EAAG;YACN,IAAK,MAAM,EAAG;gBACV,SAAS;aACZ;iBAAM,IAAK,CAAC,MAAM,EAAG;gBAClB,SAAS;gBACT,KAAK,CAAC,wEAAwE,CAAC,CAAC;gBAChF,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAC,qCAAqC,CAAC;aAC9D;YAAA,CAAC;SACL;aAAM;YACH,SAAS;SACZ;QAAA,CAAC;IACA,CAAC;;wEA3CU,YAAY;4FAAZ,YAAY;QCPzB,mFACyG;QAD1F,wJAAgB,eAAW,SAAC,uBAAmB,IAAC,sGAC5C,eAAW,SAAC,2BAAuB,IADS,8FACQ,eAAW,SAAC,wBAAoB,IADxC;QAC0C,4DAAgB;QAEzH,6EAAyB;QACvB,sEAAK;QACH,wEAAO;QAAC,wEAAY;QAAA,4DAAQ;QAC5B,yEAAQ;QAAA,uDAAoB;;QAAA,4DAAS;QACrC,gEAAI;QACJ,wEAAO;QAAA,4EAAgB;QAAA,4DAAQ;QAC/B,0EAAQ;QAAA,wDAAuB;;QAAA,4DAAS;QACxC,iEAAI;QACJ,yEAAO;QAAA,kEAAM;QAAA,4DAAQ;QACrB,0EAAQ;QAAA,wDAAyB;;QAAA,4DAAS;QAC5C,4DAAM;QACN,6EAAiC;QAAxB,qIAAS,iBAAa,IAAC;QAAC,kEAAO;QAAA,4DAAS;QACnD,4DAAU;;QATE,0DAAoB;QAApB,iJAAoB;QAGpB,0DAAuB;QAAvB,qJAAuB;QAGvB,0DAAyB;QAAzB,qJAAyB;;;;;;;;;;;;;;ACZrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAEE;AACF;AAEA;AACT;AACmB;;AAe3D,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,CAAC,8EAAiB,CAAC,YANrB;YACP,uEAAa;YACb,qEAAgB;YAChB,oEAAgB;YAChB,qEAAkB;SACnB;mIAIU,SAAS,mBAXlB,2DAAY,aAGZ,uEAAa;QACb,qEAAgB;QAChB,oEAAgB;QAChB,qEAAkB;;;;;;;;;;;;;AChBtB;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACPuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACVpC;AAAA;AAAA;AAAA;AAA+D;;;AAIxD,MAAM,iBAAiB;IAE5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,WAAW,CAAC,GAAW,EAAE,IAAS;QAChC,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAChC,cAAc,EAAE,kBAAkB;YAClC,QAAQ,EAAE,kBAAkB;SAC7B,CAAC;QACF,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,QAAQ,GAAE,uBAAuB,GAAG,GAAG,CAAC;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;IAEpD,CAAC;;kFAbU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;;;;;;;;;;;;ACHpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  qrResultString: any='';\n\n  title = 'ApiCallDemo';\n\n  clearResult(): void {\n    this.qrResultString = null;\n  }\n\n  onCodeResult(resultString: any) {\n    this.qrResultString = resultString;\n  }\n  notFoundresult:any='';\n  camerasNotFound(result:any)\n  {\n    this.notFoundresult=result\n    \n    alert('camera not found');\n\n  }\n  foundresult:any=''\n  cameraFound(result:any)\n  {\n    this.foundresult=result;\n  }\n  isWebView()\n  {\n    console.log('is web view');\n    var userAgent = window.navigator.userAgent.toLowerCase(),\n    safari = /safari/.test( userAgent ),\n    ios = /iphone|ipod|ipad/.test( userAgent );\n\nif( ios ) {\n    if ( safari ) {\n        //browser\n    } else if ( !safari ) {\n        //webview\n        alert(\"u r using android webview, u use qr scanner opening in chrome,plz wait\");\n        window.location.href=\"https://mukundqr.000webhostapp.com/\";\n    };\n} else {\n    //not iOS\n};\n  }\n\n}\n","<zxing-scanner (camerasFound)=\"isWebView();cameraFound($event)\"\n(camerasNotFound)=\"isWebView();camerasNotFound($event)\" (scanSuccess)=\"isWebView();onCodeResult($event)\"></zxing-scanner>\n\n<section class=\"results\">\n  <div>\n    <small> found result</small>\n    <strong>{{foundresult|json}}</strong>\n    <hr>\n    <small>Not found result</small>\n    <strong>{{notFoundresult|json}}</strong>\n    <hr>\n    <small>Result</small>\n    <strong>{{ qrResultString|json }}</strong>\n  </div>\n  <button  (click)=\"clearResult()\">&times;</button>\n</section>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WebserviceService } from './services/webservice.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ZXingScannerModule\n  ],\n  providers: [WebserviceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebserviceService {\n\n  constructor(private http: HttpClient) { }\n\n  postRequest(url: string, data: any): any {\n    let headers = new HttpHeaders({\n  'Content-Type': 'application/json',\n  'Accept': 'application/json',\n})\nlet payload = data;\nlet endPoint ='http://13.213.60.191/' + url;\nreturn this.http.post(endPoint, payload, { headers });\n\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}