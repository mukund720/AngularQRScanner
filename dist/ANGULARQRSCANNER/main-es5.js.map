{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///src/app/services/webservice.service.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","qrResultString","title","resultString","onCodeResult","AppModule","routes","AppRoutingModule","forRoot","bootstrapModule","err","console","error","WebserviceService","http","url","data","headers","payload","endPoint","post","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<zxing-scanner (scanSuccess)=\"onCodeResult($event)\"></zxing-scanner>\n\n<section class=\"results\" *ngIf=\"qrResultString\">\n  <div>\n    <small>Result</small>\n    <strong>{{ qrResultString }}</strong>\n  </div>\n  <button  (click)=\"clearResult()\">&times;</button>\n</section>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  qrResultString: any='';\n\n  title = 'ApiCallDemo';\n\n  clearResult(): void {\n    this.qrResultString = null;\n  }\n\n  onCodeResult(resultString: any) {\n    this.qrResultString = resultString;\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WebserviceService } from './services/webservice.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ZXingScannerModule\n  ],\n  providers: [WebserviceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebserviceService {\n\n  constructor(private http: HttpClient) { }\n\n  postRequest(url: string, data: any): any {\n    let headers = new HttpHeaders({\n  'Content-Type': 'application/json',\n  'Accept': 'application/json',\n})\nlet payload = data;\nlet endPoint ='http://13.213.60.191/' + url;\nreturn this.http.post(endPoint, payload, { headers });\n\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}